  <section id="main_content" class="inner">
    <img src="assets/buddy1.png" class="headerpic shadow">
    <div class="whitebox shadow">
      <h1>Welcome.</h1>

      <p>There are a number of hand-crafted apps that have already been created to serve our customers.
      This documentation is intended to reveal some of the options available for those who wish to customize their Zendesk account, and the plug-ins described herein are to be understood to be of an 'experimental' nature. They are unofficial and to be used at your own risk.
      </p>
    </div>

    <div class="x">
      <h2 id="top-five-apps">Our Top Four Extensions</h2>
      <p>These are some of the most-requested, frequently asked-about, and pridefully dashing add-ons created and vetted by our own services team engineers.</p>
      <ul class="top-five">
        <li>
          <h4><span class="new shadow">New! </span><a href="#"> Mobile Customization</a></h4>
          <img src="assets/mobile1.png"/>
          <p>Two widgets are used to optimize the desktop version of the site for mobile, allowing the use of custom JavaScript and CSS while maintaining usability of your Zendesk on mobile devices</p>
          <span class="bottom-right-link" id="click-mobile-more">Read More</span>
        </li>
        <div class="hidden" id="mobile-more">
          <div class="column">
            <p>First, the default Zendesk mobile must be disabled from within the agent's settings. Go to Settings >> Channels >> Web Portal, and uncheck "Mobile Version." Then, create two widgets, a JavaScript widget (global) and a CSS widget. Populate the JS widget 
              and the CSS widget with <a href='directory.html#classic' target='_blank'> the code found here. </a>
            </p>
          </div>
          <div class="column">
            <p>
               The code provided, in particular the CSS, may require modifications by you or your developer in order to meet your needs. With these widgets in place, you will be able to use conditional fields, show and hide certain elements, and any other customizations that are possible with your desktop version.
            </p>
          </div>
        </div>               
   
        <li>
          <h4><a href="#">Conditional Fields</a></h4>
          <img src="assets/conditional1.png"/>
          <p>This app requires configuration, but it enables the ticket form to show and hide certain fields based on user selection or other criteria</p>
          <span class="bottom-right-link" id="click-conditional-more">Read More</span>
        </li>    
        <div class="hidden" id="html-more">
          <div class='column'>
            <p>This app is for Lotus only. You can download the source from {{#linkTo 'extensions'}}right here{{/linkTo}} and open it up to configure what's inside. You'll want to open links.hdbs, inside of the templates folder, and look for the html anchor elements, which you can replace with whatever you want your links to be.</p>
          </div>
          <div class="column">
            <p>This hdbs template can contain <a href='https://support.zendesk.com/entries/20737477-announcing-new-multi-language-capabilities' target='_blank'>dynamic content</a> to enhance customizability. To get similar functionality in the classic interface, you can go to Settings >> Extensions and create a Custom Widget, inside of which you can include your own links or other html.</p>
          </div>
        </div>                             
        <div class="hidden" id="conditional-more">
          <div class='column'><p>One of our very top requested apps for functionality, Conditional fields is available for both Lotus and end-user (classic). For Lotus, download the app from <a target='_blank' href="directory.html#private">here</a>, and for Classic, see examples <a href="directory.html#classic" target='_blank'>in this post.</a> The main idea is, you need to build an array of all the fields that should be hidden,</p>
        </div>
          <div class="column"><p>then build a 'map', like a hash, associating each user selection in the watched field with the conditional fields that it should cause to show. Then observe the watched field for changes, and upon a change, show the correct hidden field according to the map.</p>
        </div>
        </div>               
        <li>
          <h4><a href="#">Create Ticket in Spoke</a></h4>
          <img src="assets/spoke.png"/>
          <p>Allows an agent to create a ticket in a spoke account from inside the hub account ticket view</p>
          <span class="bottom-right-link" id="click-spoke-more">Read More</span>
        </li>
        <li>
          <h4><a href="#">Quick Links App</a></h4>
          <img src="assets/quicklinks.png"/>
          <p>Creates links based on ticket fields data that open in a new tab</p>
          <span class="bottom-right-link" id="click-quick-more">Read More</span>
        </li>
        <div class="hidden" id="spoke-more">
          <div class="column">
            <p>Many Zendesk customers use a Hub-And-Spoke model for keeping track of tickets. With this app, you can view a ticket in Lotus for the hub account, and in the sidebar, create a corresponding ticket in the spoke account. <a target='_blank' href="directory.html#private">See this page</a> to get the source code for this app. 
            </p>
          </div>
          <div class="column">
            <p>To get started, go to the agent interface, in Settings under "Apps," click "Create" and upload the source as a .zip file. This app has settings which can be filled out in the Lotus interface; this is where you will input the information for the different spoke accounts for which you will be creating tickets.</p>
          </div>
        </div>               
        <div class="hidden" id="quick-more">
          <div class="column">
            <p>This app uses data from the ticket to create links that search various websites or trace an IP address. When buttons are clicked a new tab will open in the browser with the parameters from the ticket in the url. Get the source <a target='_blank' href="directory.html#private">here</a> and open it up to configure it.</p>
          </div>
          <div class="column">
            <p>You can make changes in app.js to tell it which fields to grab info from, and then in templates/links.hdbs to tell it what do to with these pieces of information; for instance, how to contruct the links that you would like to show.</p>
          </div>
        </div>    


      </ul>

 

  </section>
</div>